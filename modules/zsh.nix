{ config, options, pkgs, lib, ... }:

with lib;

let
  cfg = config.modules.zsh;
in
{
  options.modules.zsh = with types; {
    enable = mkOption {
      type = types.bool;
      default = false;
    };
  };

  config = mkIf cfg.enable {
    users.defaultUserShell = pkgs.zsh;

    environment.shells = with pkgs; [ zsh ];
    environment.pathsToLink = [ "/share/zsh" ];

    programs.zsh = {
      enable = true;
      enableCompletion = true;
      enableBashCompletion = true;
      enableGlobalCompInit = false;
      promptInit = "";
      #      shellInit = ''
      #. "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"
      #      '';
    };

    modules.home-manager = {
      xdg.configFile."zsh" = {
        source = "${../config}/zsh";
        recursive = true;
      };

      home.sessionVariables = {
        ZDOTDIR = "$XDG_CONFIG_HOME/zsh";
        ZSH_CACHE = "$XDG_CACHE_HOME/zsh";
        ZGEN_DIR = "$XDG_DATA_HOME/zgenom";
      };

      programs.zsh = {
        enable = true;
        #        enableCompletion = true;
        #        enableAutosuggestions = true;
        #        enableVteIntegration = true;
        completionInit = "";
        dotDir = ".config/zsh";

        initExtra = ''
          	  _source "$ZDOTDIR/extra.zshrc"
          	'';

        envExtra = ''
          	  _source "$ZDOTDIR/extra.zshenv"
        '';

        # source "${config.home.profileDirectory}/etc/profile.d/hm-session-vars.sh"
      };
    };

    #    home.configFile = {
    #      # Write it recursively so other modules can write files to it
    #      "zsh" = { source = "${configDir}/zsh"; recursive = true; };
    #
    #      # Why am I creating extra.zsh{rc,env} when I could be using extraInit?
    #      # Because extraInit generates those files in /etc/profile, and mine just
    #      # write the files to ~/.config/zsh; where it's easier to edit and tweak
    #      # them in case of issues or when experimenting.
    #      "zsh/extra.zshrc".text =
    #        let aliasLines = mapAttrsToList (n: v: "alias ${n}=\"${v}\"") cfg.aliases;
    #        in ''
    #          # This file was autogenerated, do not edit it!
    #          ${concatStringsSep "\n" aliasLines}
    #          ${concatMapStrings (path: "source '${path}'\n") cfg.rcFiles}
    #          ${cfg.rcInit}
    #        '';
    #
    #      "zsh/extra.zshenv".text = ''
    #        # This file is autogenerated, do not edit it!
    #        ${concatMapStrings (path: "source '${path}'\n") cfg.envFiles}
    #        ${cfg.envInit}
    #      '';
    #    };

    system.userActivationScripts.cleanupZgen = ''
      rm -rf $ZSH_CACHE
      rm -fv $ZGEN_DIR/init.zsh{,.zwc}
    '';
  };
}
